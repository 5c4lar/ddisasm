FROM ubuntu:16.04 as souffle
RUN apt-get -y update && \
    apt-get -y install software-properties-common && \
    add-apt-repository ppa:jonathonf/gcc && \
    apt-get -y update
RUN apt-get -y update && apt-get -y install automake bison build-essential \
    doxygen flex g++ g++-7 gcc gcc-7 git libffi-dev libtool  \
    make mcpp pkg-config sqlite3 libsqlite3-dev zlib1g-dev

RUN git clone -b 2.0.2 https://github.com/souffle-lang/souffle
RUN cd souffle && sh ./bootstrap
RUN cd souffle && CC=gcc-7 CXX=g++-7 ./configure --prefix=/usr --enable-64bit-domain --disable-ncurses
RUN cd souffle && make -j4 install

FROM ubuntu:16.04

ARG CMAKE_VERSION=3.10
ARG BOOST_VERSION=1.67
ARG PROTOBUF_VERSION=3.1.0-0ubuntu1~maarten0
ARG CXX_COMPILER=g++-7

# Use bash for more convenient variable substitution syntax
SHELL ["/bin/bash", "-c"]

# Add repository for GCC 7.1
RUN apt-get -y update && \
    apt-get -y install software-properties-common && \
    add-apt-repository ppa:jonathonf/gcc && \
    apt-get -y update

# Install common packages
RUN apt-get -y update && apt-get -y install apt-transport-https autoconf automake build-essential \
    curl doxygen g++ g++-7 gcc gcc-7 gcc-multilib git g++-multilib \
    libc++1 libc++abi1 libtool make mcpp \
    pkg-config python3 python3-pip wget unzip zlib1g-dev
RUN python3 -m pip install distro pyyaml

# Copy souffle
COPY --from=souffle /usr/bin/souffle-compile /usr/bin/souffle-compile
COPY --from=souffle /usr/bin/souffle-config /usr/bin/souffle-config
COPY --from=souffle /usr/bin/souffle /usr/bin/souffle
COPY --from=souffle /usr/bin/souffle-profile /usr/bin/souffle-profile
COPY --from=souffle /usr/include/souffle/ /usr/include/souffle

# Install clang 3.8.0
RUN wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key|apt-key add - && \
    add-apt-repository 'deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-8 main' && \
    apt-get -y update && \
    apt-get -y install clang-8 libc++-8-dev

RUN ln -s /usr/bin/clang++-8 /usr/bin/clang++ && ln -s /usr/bin/clang-8 /usr/bin/clang

# Install CMake
RUN curl -SL https://cmake.org/files/v$CMAKE_VERSION/cmake-$CMAKE_VERSION.0-Linux-x86_64.tar.gz \
    |tar -xz --strip-components=1 -C /usr/local

# Install boost and protobuf
RUN add-apt-repository ppa:mhier/libboost-latest && \
    add-apt-repository ppa:maarten-fonville/protobuf && \
    apt-get -y update && \
    apt-get -y install libboost${BOOST_VERSION}-dev libprotobuf-dev=$PROTOBUF_VERSION \
        protobuf-compiler=$PROTOBUF_VERSION

# Install LIEF
RUN cd /usr/local/src \
    && git clone -b 0.10.0 https://github.com/lief-project/LIEF.git \
    && cd LIEF \
    && mkdir build \
    && cd build \
    && cmake -DLIEF_PYTHON_API=off -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=Off .. \
    && make \
    && make install

# Install capstone
COPY libcapstone-dev_*_amd64.deb /ddisasm/
RUN dpkg -i /ddisasm/libcapstone-dev_*_amd64.deb

# Install libehp
RUN git clone https://git.zephyr-software.com/opensrc/libehp.git \
    && cd libehp \
    && git reset --hard ddb106c4c1e521bf4b282d17e2a8abf0aa0fe721 \
    && cmake ./ -Bbuild -DCMAKE_CXX_COMPILER=${CXX_COMPILER} -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DEHP_BUILD_SHARED_LIBS=OFF \
    && cd build \
    && make && make install

# Install cross-platform utils
RUN apt-get -y update && \
    apt-get -y install gcc-arm-linux-gnueabihf gcc-aarch64-linux-gnu qemu gcc-5-arm-linux-gnueabihf
