FROM ubuntu:16.04 as souffle
RUN apt-get -y update && apt-get -y install automake bison build-essential \
    doxygen flex g++ gcc gcc-multilib g++-multilib git libtool make mcpp \
    pkg-config  sqlite3 libsqlite3-dev zlib1g-dev libffi-dev
RUN git clone -b 1.5.1 https://github.com/souffle-lang/souffle
RUN cd souffle && sh ./bootstrap
RUN cd souffle && ./configure --prefix=/usr --enable-64bit-domain --disable-provenance
RUN cd souffle && make -j4 install
RUN cd souffle && cp include/souffle/RamTypes.h /usr/include/souffle/

FROM ubuntu:16.04

ARG CMAKE_VERSION=3.9
ARG CXX_COMPILER=clang++-8

# Install common packages
RUN apt-get -y update && \
    apt-get -y install software-properties-common curl git make wget

# Install libstdc++
RUN add-apt-repository ppa:jonathonf/gcc-7.1 && \
    apt-get -y update && \
    apt-get -y install libstdc++-7-dev

# Install Clang++
RUN wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key|apt-key add - && \
    add-apt-repository 'deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-8 main' && \
    apt-get -y update && \
    apt-get -y install clang-8 libc++-8-dev && \
    update-alternatives --install /usr/bin/clang clang /usr/bin/clang-8 60 \
                        --slave /usr/bin/clang++ clang++ /usr/bin/clang++-8 && \
    update-alternatives --install /usr/bin/cc cc /usr/bin/clang-8 60 && \
    update-alternatives --install /usr/bin/c++ c++ /usr/bin/clang++-8 60

# Copy souffle
RUN apt-get -y install autoconf automake bison \
    doxygen flex libtool mcpp pkg-config \
    sqlite3 libsqlite3-dev zlib1g-dev ed libpcre3-dev libncurses5-dev

COPY --from=souffle /usr/bin/souffle-compile /usr/bin/souffle-compile
COPY --from=souffle /usr/bin/souffle-config /usr/bin/souffle-config
COPY --from=souffle /usr/bin/souffle /usr/bin/souffle
COPY --from=souffle /usr/bin/souffle-profile /usr/bin/souffle-profile
COPY --from=souffle /usr/include/souffle/ /usr/include/souffle

# Install CMake
RUN curl -SL https://cmake.org/files/v$CMAKE_VERSION/cmake-$CMAKE_VERSION.0-Linux-x86_64.tar.gz \
    |tar -xz --strip-components=1 -C /usr/local

RUN ldconfig

# Install capstone
RUN cd /usr/local/src \
    && wget https://github.com/aquynh/capstone/archive/4.0.1.tar.gz \
    && tar xf 4.0.1.tar.gz \
    && cd capstone-4.0.1 \
    && CAPSTONE_ARCHS=x86 ./make.sh \
    && CAPSTONE_ARCHS=x86 ./make.sh install

# Install LIEF
RUN cd /usr/local/src \
    && git clone -b 0.9.0 https://github.com/lief-project/LIEF.git \
    && cd LIEF \
    && mkdir build \
    && cd build \
    && cmake -DLIEF_PYTHON_API=off -DCMAKE_BUILD_TYPE=Release .. \
    && cmake --build . --target LIB_LIEF_STATIC --config Release \
    && make install

COPY . /ddisasm

# Build GTIRB
RUN rm -rf /ddisasm/gtirb/build /ddisasm/gtirb/CMakeCache.txt /ddisasm/gtirb/CMakeFiles /ddisasm/gtirb/CMakeScripts
RUN cd /ddisasm/gtirb/ && cmake ./ -Bbuild -DCMAKE_CXX_COMPILER=${CXX_COMPILER}  && cd build &&  make

# Build gtirb-pprinter
RUN rm -rf /ddisasm/gtirb-pprinter/build /ddisasm/gtirb-pprinter/CMakeCache.txt /ddisasm/gtirb-pprinter/CMakeFiles /ddisasm/gtirb-pprinter/CMakeScripts
RUN cd /ddisasm/gtirb-pprinter/ && cmake ./ -Bbuild -DCMAKE_CXX_COMPILER=${CXX_COMPILER} && cd build &&  make

# Build ehp
RUN rm -rf /ddisasm/libehp/build /ddisasm/libehp/CMakeCache.txt /ddisasm/libehp/CMakeFiles /ddisasm/libehp/CMakeScripts
RUN cd /ddisasm/libehp/ && cmake ./ -Bbuild -DCMAKE_CXX_COMPILER=${CXX_COMPILER} && cd build &&  make

# Build ddisasm
ENV TERM xterm
RUN rm -rf /ddisasm/build /ddisasm/CMakeCache.txt /ddisasm/CMakeFiles /ddisasm/CMakeScripts
WORKDIR /ddisasm
RUN cmake ./  -Bbuild -DCMAKE_CXX_COMPILER=${CXX_COMPILER} -DCORES=8 -DLIEF_ROOT=/usr/ && cd build && make
ENV PATH=/ddisasm/build/bin:$PATH
