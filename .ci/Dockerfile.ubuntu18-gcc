FROM ubuntu:18.04 as souffle
RUN apt-get -y update && apt-get -y install automake bison build-essential \
    doxygen flex git libffi-dev libtool make mcpp pkg-config \
    sqlite3 libsqlite3-dev zlib1g-dev

RUN git clone -b 1.7.1 https://github.com/souffle-lang/souffle
RUN cd souffle && sh ./bootstrap
RUN cd souffle && ./configure --prefix=/usr --enable-64bit-domain --disable-ncurses
RUN cd souffle && make -j4 install
RUN cd souffle && cp include/souffle/RamTypes.h /usr/include/souffle/

FROM ubuntu:18.04

ENV LD_LIBRARY_PATH /usr/local/lib:$LD_LIBRARY_PATH
ARG BOOST_VERSION=1.67
ARG CXX_COMPILER=g++-7

# Use bash for more convenient variable substitution syntax
SHELL ["/bin/bash", "-c"]

# Install common packages
RUN apt-get -y update && apt-get -y install autoconf automake clang cmake \
    curl doxygen git libprotobuf-dev libtool libstdc++-7-dev \
    make mcpp pkg-config protobuf-compiler python3 python3-pip \
    software-properties-common unzip wget zlib1g-dev

COPY --from=souffle /usr/bin/souffle-compile /usr/bin/souffle-compile
COPY --from=souffle /usr/bin/souffle-config /usr/bin/souffle-config
COPY --from=souffle /usr/bin/souffle /usr/bin/souffle
COPY --from=souffle /usr/bin/souffle-profile /usr/bin/souffle-profile
COPY --from=souffle /usr/include/souffle/ /usr/include/souffle

# Install Boost
RUN add-apt-repository ppa:mhier/libboost-latest && \
    apt-get -y update && \
    apt-get -y install libboost${BOOST_VERSION}-dev

# Install capstone
RUN cd /usr/local/src \
    && git clone -b next https://github.com/GrammaTech/capstone.git \
    && cd capstone \
    && CAPSTONE_ARCHS=x86 ./make.sh \
    && CAPSTONE_ARCHS=x86 ./make.sh install


# Install LIEF
RUN cd /usr/local/src \
    && git clone -b 0.10.0 https://github.com/lief-project/LIEF.git \
    && cd LIEF \
    && mkdir build \
    && cd build \
    && cmake -DLIEF_PYTHON_API=off -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=Off .. \
    && make \
    && make install

COPY . /ddisasm

# Install GTIRB
RUN GTIRB_BRANCH=$((grep -Eo "check_gtirb_branch\([^)]+" CMakeLists.txt || echo "master") | sed 's/check_gtirb_branch(//') && \
    curl -L https://git.grammatech.com/rewriting/gtirb/-/jobs/artifacts/${GTIRB_BRANCH}/download?job=debian-installer-ubuntu18 --output "gtirb-artifacts.zip"
RUN unzip -o gtirb-artifacts.zip && dpkg -i GTIRB*.deb

# Install gtirb-pprinter
RUN rm -rf /ddisasm/gtirb-pprinter/build /ddisasm/gtirb-pprinter/CMakeCache.txt /ddisasm/gtirb-pprinter/CMakeFiles /ddisasm/gtirb-pprinter/CMakeScripts
RUN cd /ddisasm/gtirb-pprinter/ && cmake ./ -Bbuild -DCMAKE_CXX_COMPILER=${CXX_COMPILER} && cd build && make && make install

# Install ehp
RUN rm -rf /ddisasm/libehp/build /ddisasm/libehp/CMakeCache.txt /ddisasm/libehp/CMakeFiles /ddisasm/libehp/CMakeScripts
RUN cd /ddisasm/libehp/ && cmake ./ -Bbuild -DCMAKE_CXX_COMPILER=${CXX_COMPILER} && cd build &&  make && make install

ENV TERM xterm
ENV PATH=/ddisasm/build/bin:$PATH

RUN /ddisasm/.ci/build-linux.sh ${CXX_COMPILER}
ARG CPACK_GENERATOR=""
RUN if [ ! -z "${CPACK_GENERATOR}" ] ; then cd /ddisasm/build && cpack -G "${CPACK_GENERATOR}"; fi

WORKDIR /ddisasm/
