//===- jump_operations.dl -----------------------------------*- datalog -*-===//
//
//  Copyright (C) 2019 GrammaTech, Inc.
//
//  This code is licensed under the GNU Affero General Public License
//  as published by the Free Software Foundation, either version 3 of
//  the License, or (at your option) any later version. See the
//  LICENSE.txt file in the project root for license terms or visit
//  https://www.gnu.org/licenses/agpl.txt.
//
//  This program is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
//  GNU Affero General Public License for more details.
//
//  This project is sponsored by the Office of Naval Research, One Liberty
//  Center, 875 N. Randolph Street, Arlington, VA 22203 under contract #
//  N68335-17-C-0700.  The content of the information does not necessarily
//  reflect the position or policy of the Government and no official
//  endorsement should be inferred.
//
//===----------------------------------------------------------------------===//
/**
The set of jump operations in x86
*/

/**
Conditional jumps
*/
.decl conditional_jump(c:symbol)
conditional_jump("JCXZ").
conditional_jump("JECXZ").
conditional_jump("JRCXZ").
conditional_jump("JO").
conditional_jump("JNO").
conditional_jump("JB").
conditional_jump("JNB").
conditional_jump("JZ").
conditional_jump("JNZ").
conditional_jump("JNA").
conditional_jump("JA").
conditional_jump("JS").
conditional_jump("JNS").
conditional_jump("JP").
conditional_jump("JNP").
conditional_jump("JL").
conditional_jump("JGE").
conditional_jump("JLE").
conditional_jump("JG").
conditional_jump("JC").
conditional_jump("JAE").
conditional_jump("JE").
conditional_jump("JNE").
conditional_jump("JBE").
conditional_jump("JNBE").

jump_operation(Operation),
conditional_operation(Operation):-
    conditional_jump(Operation).

jump_operation("JMP").

jump_equal_operation("JE").
jump_equal_operation("JZ").

jump_unequal_operation("JNE").
jump_unequal_operation("JNZ").

jump_operation_op_index(Operation,1):-
    jump_operation(Operation);
    loop_operation(Operation).

call_operation_op_index(Operation,1):-
    call_operation(Operation).
