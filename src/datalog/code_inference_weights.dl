//===- code_inference_weights.dl ---------------------------*- datalog -*-===//
//
//  Copyright (C) 2024 GrammaTech, Inc.
//
//  This code is licensed under the GNU Affero General Public License
//  as published by the Free Software Foundation, either version 3 of
//  the License, or (at your option) any later version. See the
//  LICENSE.txt file in the project root for license terms or visit
//  https://www.gnu.org/licenses/agpl.txt.
//
//  This program is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
//  GNU Affero General Public License for more details.
//
//  This project is sponsored by the Office of Naval Research, One Liberty
//  Center, 875 N. Randolph Street, Arlington, VA 22203 under contract #
//  N68335-17-C-0700.  The content of the information does not necessarily
//  reflect the position or policy of the Government and no official
//  endorsement should be inferred.
//
//===---------------------------------------------------------------------===//

/**
The heuristic with name 'Name' has type 'Type' and weight 'Weight'.
The type can be "simple" or "proportional".
- "simple" heuristics assign X points where X is the heuristic weight.
- "proportional" heuristics assign X*Size points where X is the weight
and Size is the size of the block in bytes.

Heuristic weights take a default value specified in `default_heuristic_weight`
unless a user-defined value is provided using `user_heuristic_weight` which
can be fed to ddisasm as a hint.
*/
.decl heuristic_weight(Name:symbol,Type:symbol,Weight:number)

/**
Default heuristic weights (see `heuristic_weight`)
*/
.decl default_heuristic_weight(Name:symbol,Type:symbol,Weight:number)

/**
User-provided heuristic weights. These take precedence over
the default weights and can be provided as ddisasm hints.
*/
.decl user_heuristic_weight(Name:symbol,Type:symbol,Weight:number)
.input user_heuristic_weight

heuristic_weight(Name,Type,Weight):-
    user_heuristic_weight(Name,Type,Weight).
heuristic_weight(Name,Type,Weight):-
    !user_heuristic_weight(Name,_,_),
    default_heuristic_weight(Name,Type,Weight).


// Proportional weights
default_heuristic_weight("size","proportional",5).


// Simple weights
default_heuristic_weight("address in data array","simple",1).
default_heuristic_weight("aligned address in data","simple",1).
default_heuristic_weight("appears","simple",3).
default_heuristic_weight("basic point","simple",0).
default_heuristic_weight("code section start","simple",1).
default_heuristic_weight("composite data access: 1 resolved","simple",3).
default_heuristic_weight("composite data access: 2 resolved","simple",4).
default_heuristic_weight("composite data access","simple",2).
default_heuristic_weight("conditional jump/return: fallthrough to invalid","simple",-2).
default_heuristic_weight("dangling block with enclosed instr","simple",-1).
default_heuristic_weight("data access: resolved","simple",4).
default_heuristic_weight("data access","simple",2).
default_heuristic_weight("debug block","simple",-1).
default_heuristic_weight("exc-region","simple",3).
default_heuristic_weight("fallthrough_to","simple",1).
default_heuristic_weight("has well-defined call","simple",1).
default_heuristic_weight("has well-defined call to a function symbol","simple",3).
default_heuristic_weight("has well-defined jump","simple",1).
default_heuristic_weight("incremental linking target","simple",3).
default_heuristic_weight("landing-pad","simple",10).
default_heuristic_weight("overlaps with relocation","simple",-3).
default_heuristic_weight("padding nop block","simple",2).
default_heuristic_weight("plt call","simple",1).
default_heuristic_weight("relative-jump-table","simple",6).
default_heuristic_weight("relative-jump-table-start","simple",3).
default_heuristic_weight("relative jump table target: absolute","simple",1).
default_heuristic_weight("relative jump table target","simple",2).
default_heuristic_weight("repeated byte","simple",10).
default_heuristic_weight("resolved-reaches strong","simple",7).
default_heuristic_weight("resolved-reaches weak","simple",3).
default_heuristic_weight("seh handler","simple",5).
default_heuristic_weight("unresolved-direct-call","simple",2).
default_heuristic_weight("unresolved-direct-jump","simple",2).
default_heuristic_weight("unresolved-may-fallthrough","simple",2).
